const int EN_L    =3; //left motor pwm
const int LEFT_A  =4;
const int LEFT_B  =5;
const int RIGHT_A =6;
const int RIGHT_B =7;
const int EN_R    =9; //right motor pwm

void setup() {
  Serial.begin(9600); 
  Serial.println("Start UART test");

  //모터 핀모드 설정
  pinMode(EN_L, OUTPUT);
  pinMode(EN_R, OUTPUT);
  pinMode(LEFT_A, OUTPUT);
  pinMode(LEFT_B, OUTPUT);
  pinMode(RIGHT_A, OUTPUT);
  pinMode(RIGHT_B, OUTPUT);
 // pinMode(LEFT_A, HIGH);
 // pinMode(LEFT_B, HIGH);
 // pinMode(RIGHT_A, HIGH);
 // pinMode(RIGHT_B, HIGH);
  Serial.print("pin ok");
}

void loop() {
  //라즈베리 파이에서 넘어온 데이터가 있으면 PC로 넘겨줍니다.
 char read_data;
 if(Serial.available()) {
    read_data = Serial.read();
    Serial.print(read_data);
 
      if( read_data == 'f') {    
        forward();
        Serial.print("direction = ");
        Serial.println("312"); //forward
        } 
        if(read_data == 'b') {
          backward();
          Serial.print("direction = ");
          Serial.println("306"); //backward
        } 
        if(read_data == 'l') {
          left();
          Serial.print("direction = ");
          Serial.println("309");
        } 
        if(read_data == 'r') {
          right();
          Serial.print("direction = ");
          Serial.println("303");
        }
        if(read_data == '1'){
          forward_right();
          Serial.print("direction = ");
          Serial.println("301");
        } 
        if(read_data == '2'){
          forward_right();
          Serial.print("direction = ");
          Serial.println("302");
        } 
        if(read_data == '4'){
          backward_right();
          Serial.print("direction = ");
          Serial.println("304");
        } 
        if(read_data == '5'){
          backward_right();
          Serial.print("direction = ");
          Serial.println("305");
        } 
        if(read_data == '7'){
          backward_left();
          Serial.print("direction = ");
          Serial.println("307");
        } 
        if(read_data == '8'){
          backward_left();
          Serial.print("direction = ");
          Serial.println("308");
        } 
        if(read_data == 'A'){
          forward_left();
          Serial.print("direction = ");
          Serial.println("310");
        } 
        if(read_data == 'B'){
          forward_left();
          Serial.print("direction = ");
          Serial.println("311");
        } 
        else{
          stop();
          Serial.print("direction = ");
          Serial.println("stop");
        }
      }
      delay(20);
}

void forward() {
  analogWrite(EN_L, 255);
  analogWrite(EN_R, 255);
  digitalWrite(LEFT_A, HIGH);
  digitalWrite(LEFT_B, LOW);
  digitalWrite(RIGHT_A, HIGH);
  digitalWrite(RIGHT_B, LOW);
  delay(1000);      
}
void backward() {
  analogWrite(EN_L, 255);
  analogWrite(EN_R, 255);
  digitalWrite(LEFT_A,LOW);
  digitalWrite(LEFT_B,HIGH);
  digitalWrite(RIGHT_A, LOW);
  digitalWrite(RIGHT_B, HIGH);
  delay(1000);
}
void left() {
  analogWrite(EN_L, 0);
  analogWrite(EN_R, 255);
  digitalWrite(RIGHT_A, HIGH);
  digitalWrite(RIGHT_B, LOW);
  delay(1000);
}
void right() {
  analogWrite(EN_L, 255);
  analogWrite(EN_R, 0);
  digitalWrite(LEFT_A, HIGH);
  digitalWrite(LEFT_B, LOW);
  delay(1000);
}
void forward_left(){
  analogWrite(EN_L, 100);
  analogWrite(EN_R, 200);
  digitalWrite(RIGHT_A, HIGH);
  digitalWrite(RIGHT_B, LOW);
  digitalWrite(LEFT_A, HIGH);
  digitalWrite(LEFT_B, LOW);
  delay(1000);
}
void forward_right() {
  analogWrite(EN_L, 200);
  analogWrite(EN_R, 100);
  digitalWrite(RIGHT_A, HIGH);
  digitalWrite(RIGHT_B, LOW);
  digitalWrite(LEFT_A, HIGH);
  digitalWrite(LEFT_B, LOW);
  delay(1000);
}
void backward_left() {
  analogWrite(EN_L,100);
  analogWrite(EN_R, 200);
  digitalWrite(LEFT_A, LOW);
  digitalWrite(LEFT_B,HIGH);
  digitalWrite(RIGHT_A, LOW);
  digitalWrite(RIGHT_B, HIGH);
  delay(1000);
}
void backward_right() {
  analogWrite(EN_L,200);
  analogWrite(EN_R, 100);
  digitalWrite(LEFT_A, LOW);
  digitalWrite(LEFT_B,HIGH);
  digitalWrite(RIGHT_A, LOW);
  digitalWrite(RIGHT_B, HIGH);
  delay(1000);
}
void stop() {
  analogWrite(3,0);
  analogWrite(9,0);
  delay(2000);
}
