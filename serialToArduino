const int EN_L    =3; //left motor pwm
const int LEFT_A  =4;
const int LEFT_B  =5;
const int RIGHT_A =6;
const int RIGHT_B =7;
const int EN_R    =9;//right motor pwm

//int buffPos; //버퍼에 기록할 위치

void setup() {
  Serial.begin(9600); //시리얼모니터 송신

  //모터 핀모드 설정
  pinMode(EN_L, OUTPUT);
  pinMode(EN_R, OUTPUT);
  pinMode(LEFT_A, OUTPUT);
  pinMode(LEFT_B, OUTPUT);
  pinMode(RIGHT_A, OUTPUT);
  pinMode(RIGHT_B, OUTPUT);

  Serial.print("direction =");
}
void loop() {
 char read_data;
 read_data = Serial.read();
 //Serial.println(read_data);

 if(Serial.available()) {
//f b l r 1 2 4 5 7 8 A B
      if( read_data == 'f') {
        forward();
        reset();
        Serial.println(" 312");
        }
        if(read_data == 'b') {
          backward();
          reset();
          Serial.println(" 306");
        }
        if(read_data == 'l') {
          left();
          reset();
          Serial.println(" 309");
        }
        if(read_data == 'r') {
          right();
          reset();
          Serial.println(" 303");
        }
        if(read_data == '1'){
          forward_right();
          reset();
          Serial.println(" 301");
        }
        if(read_data == '2'){
          right_forward();
          reset();
          Serial.println(" 302");
        }
        if(read_data == '4'){
          right_backward();
          reset();
          Serial.println(" 304");
        }
        if(read_data == '5'){
          backward_right();
          reset();
          Serial.print(" 305");
        }
        if(read_data == '7'){
          backward_left();
          reset();
          Serial.print(" 307");
        }
        if(read_data == '8'){
          left_backward();
          reset();
          Serial.print(" 308");
        }
        if(read_data == 'A'){
          left_forward();
          reset();
          Serial.print(" 310");
        }
        if(read_data == 'B'){
          forward_left();
          reset();
          Serial.print(" 311");
        }
        if(read_data =='N'){
          stop();
          Serial.println(" stop");
        }
        /*else {
          Serial.print("666");
          delay(2000);
        }*/
      }
      delay(20);
}

void forward() {
  analogWrite(EN_L, 255);
  analogWrite(EN_R, 255);
  digitalWrite(LEFT_A, HIGH);
  digitalWrite(LEFT_B, LOW);
  digitalWrite(RIGHT_A, HIGH);
  digitalWrite(RIGHT_B, LOW);
  delay(1000);
}
void backward() {
  analogWrite(EN_L, 255);
  analogWrite(EN_R, 255);
  digitalWrite(LEFT_A,LOW);
  digitalWrite(LEFT_B,HIGH);
  digitalWrite(RIGHT_A, LOW);
  digitalWrite(RIGHT_B, HIGH);
  delay(1000);
}
void left() {
  analogWrite(EN_L, 0);
  analogWrite(EN_R, 255);
  digitalWrite(RIGHT_A, HIGH);
  digitalWrite(RIGHT_B, LOW);
  delay(1000);
}
void right() {
  analogWrite(EN_L, 255);
  analogWrite(EN_R, 0);
  digitalWrite(LEFT_A, HIGH);
  digitalWrite(LEFT_B, LOW);
  delay(1000);
}
void forward_left(){
  analogWrite(EN_L, 100);
  analogWrite(EN_R, 200);
  digitalWrite(RIGHT_A, HIGH);
  digitalWrite(RIGHT_B, LOW);
  digitalWrite(LEFT_A, HIGH);
  digitalWrite(LEFT_B, LOW);
  delay(1000);
}
void left_forward() {
  analogWrite(EN_L, 50);
  analogWrite(EN_R, 200);
  digitalWrite(RIGHT_A, HIGH);
  digitalWrite(RIGHT_B, LOW);
  digitalWrite(LEFT_A, HIGH);
  digitalWrite(LEFT_B, LOW);
  delay(1000);
}
void forward_right() {
  analogWrite(EN_L, 200);
  analogWrite(EN_R, 100);
  digitalWrite(RIGHT_A, HIGH);
  digitalWrite(RIGHT_B, LOW);
  digitalWrite(LEFT_A, HIGH);
  digitalWrite(LEFT_B, LOW);
  delay(1000);
}
void right_forward() {
  analogWrite(EN_L, 200);
  analogWrite(EN_R, 50);
  digitalWrite(RIGHT_A, HIGH);
  digitalWrite(RIGHT_B, LOW);
  digitalWrite(LEFT_A, HIGH);
  digitalWrite(LEFT_B, LOW);
  delay(1000);
}
void backward_left() {
  analogWrite(EN_L,100);
  analogWrite(EN_R, 200);
  digitalWrite(LEFT_A, LOW);
  digitalWrite(LEFT_B,HIGH);
  digitalWrite(RIGHT_A, LOW);
  digitalWrite(RIGHT_B, HIGH);
  delay(1000);
}
void left_backward() {
  analogWrite(EN_L,50);
  analogWrite(EN_R, 200);
  digitalWrite(LEFT_A, LOW);
  digitalWrite(LEFT_B,HIGH);
  digitalWrite(RIGHT_A, LOW);
  digitalWrite(RIGHT_B, HIGH);
  delay(1000);
}
void backward_right() {
  analogWrite(EN_L,200);
  analogWrite(EN_R, 100);
  digitalWrite(LEFT_A, LOW);
  digitalWrite(LEFT_B,HIGH);
  digitalWrite(RIGHT_A, LOW);
  digitalWrite(RIGHT_B, HIGH);
  delay(1000);
}
void right_backward() {
  analogWrite(EN_L,200);
  analogWrite(EN_R, 50);
  digitalWrite(LEFT_A, LOW);
  digitalWrite(LEFT_B,HIGH);
  digitalWrite(RIGHT_A, LOW);
  digitalWrite(RIGHT_B, HIGH);
  delay(1000);
}
void stop() {
  analogWrite(3,0);
  analogWrite(9,0);
  delay(1000);
}
void reset() {
  digitalWrite(LEFT_A, LOW);
  digitalWrite(LEFT_B, LOW);
  digitalWrite(RIGHT_A, LOW);
  digitalWrite(RIGHT_B, LOW);
}